{ config, lib, pkgs, ... }:

with lib;

let

  cfg = config.fonts.fontconfig;

  profileDirectory = config.home.profileDirectory;

in

{
  meta.maintainers = [ maintainers.rycee ];

  imports = [
    (mkRenamedOptionModule
      [ "fonts" "fontconfig" "enableProfileFonts" ]
      [ "fonts" "fontconfig" "enable" ])
  ];

  options = {
    fonts.fontconfig = {
      enable = mkOption {
        type = types.bool;
        default = false;
        description = ''
          Whether to enable fontconfig configuration. This will, for
          example, allow fontconfig to discover fonts and
          configurations installed through
          <varname>home.packages</varname> and
          <command>nix-env</command>.
        '';
      };
    };
  };

  config = mkIf cfg.enable {
    home.extraProfileCommands = ''
      export FONTCONFIG_FILE=$(pwd)/fonts.conf

      cat > $FONTCONFIG_FILE << EOF
      <?xml version='1.0'?>
      <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
      <fontconfig>
        <dir>$out/lib/X11/fonts</dir>
        <dir>$out/share/fonts</dir>
        <cachedir>$out/lib/fontconfig/cache</cachedir>
      </fontconfig>
      EOF

      ${getBin pkgs.fontconfig}/bin/fc-cache -f
      rm -f $out/lib/fontconfig/cache/CACHEDIR.TAG

      unset FONTCONFIG_FILE
    '';

    xdg.configFile = {
      "fontconfig/conf.d/10-hm-fonts.conf".text = ''
        <?xml version='1.0'?>

        <!-- Generated by Home Manager. -->

        <!DOCTYPE fontconfig SYSTEM 'fonts.dtd'>
        <fontconfig>
          <include ignore_missing="yes">${config.home.path}/etc/fonts/conf.d</include>
          <include ignore_missing="yes">${config.home.path}/etc/fonts/fonts.conf</include>

          <dir>${config.home.path}/lib/X11/fonts</dir>
          <dir>${config.home.path}/share/fonts</dir>
          <dir>${profileDirectory}/lib/X11/fonts</dir>
          <dir>${profileDirectory}/share/fonts</dir>

          <cachedir>${config.home.path}/lib/fontconfig/cache</cachedir>
        </fontconfig>
      '';
    };
  };
}
